I"*P<h2 id="이분법이란">이분법이란?</h2>

<hr />

<p>이분법이란 주어진 범위 [lo, hi]에서 어떤 함수 f(x)의 값이 0이 되는 지점을 찾아내는 기법입니다.</p>

<p>이분법을 사용하면 답이 여러개 있는 함수라도 연속이기만 하면 답을 구할 수 있습니다.</p>

<p>이분법은 이분탐색 기법과 관계가 밀접합니다.</p>

<p>답으로 추측되는 범위를 2분의 1씩 줄여나가기 때문에 답을 구하는 시간도 비교적 빠릅니다.</p>

<p>이분법은 근사값을 찾아가는 과정이기 때문에 답과 정확히 일치하지는 않습니다.</p>

<p>하지만, 프로그래밍 대회에서는 이분법을 이용해 적은 오차로 근사한 값을 구하는 문제도 출제되기 때문에 이러한 기법을 익혀두면 좋습니다.</p>

<h2 id="이용-방법">이용 방법</h2>

<hr />

<p>이분법을 사용하려면 먼저 극점을 알아야합니다.</p>

<p>극점이란 그래프에서 기울기가 0이 되는 부분을 말합니다.</p>

<p><img src="https://user-images.githubusercontent.com/60007241/82661637-5a5f9700-9c67-11ea-8b35-983111fb70fb.png" alt="graph1" style="zoom:50%;" /></p>

<p>위와 같은 그래프에서 극점은 대략 x의 값이 1.5와 2.5 정도로 생각 할 수 있습니다.</p>

<p>극점에서의 함수 값이 부호가 반대이면 중간값 정리에 의해 두 극점 사이에 해가 존재하는 것을 알 수 있습니다.</p>

<p>해를 찾아가는 과정은 이분 탐색을 이용합니다.</p>

<p>두 극점을 x1, x2로 생각할 때 새로운 (x1+x2)/2 중간 지점을 만듭니다.</p>

<p>만약, 이 중간 지점의 함수값을 구하고 이 값이 0 초과이면 함수값이 양수가 되는 x를 (x1+x2)/2로 교체하고 0 미만이면 함수값이 음수가 되는 x를 (x1+x2)/2로 교체합니다.</p>

<p>이 과정을 수없이 거치면 우리는 오차가 아주 작은 극점 사이의 해를 구할 수 있게 됩니다.</p>

<p>하지만, 여기서 문제점은 두가지가 있습니다.</p>

<blockquote>
  <ol>
    <li>두 극점사이의 값만 구하기 때문에 위 그래프에서 x=1, x=3처럼 극점의 범위에서 벗어나는 경우가 있다.</li>
    <li>두 극점을 구해야 한다.</li>
  </ol>
</blockquote>

<p>1번 상황과 같이 두 극점사이의 값만 구할 수 있기 때문에 위의 그래프와 같은 상황에서는 x=1과 x=3이 계산에서 벗어나게 됩니다.</p>

<p>그러므로, 이분법을 이용한다면 0의 해를 만들 것 같은 위치를 예상해 새로운 점을 추가하는 것이 필요합니다.</p>

<p>2번 상황은 재귀의 방식으로 풀어나갈 수 있습니다.</p>

<p>위 그래프를 미분한다면 다음과 같습니다.</p>

<p><img src="https://user-images.githubusercontent.com/60007241/82661640-5b90c400-9c67-11ea-8ced-91ac1e10f3dc.png" alt="graph2" style="zoom:50%;" /></p>

<p>여기서 f(x) 기울기가 0인 곳을 찾기 위해서는 f’(x) = 0이 되는 해를 구해야 합니다.</p>

<p>하지만, 이미 이분법을 알기 때문에 f’(x)가 0이 되는 지점도 구할 수 있습니다.</p>

<p>그러기 위해서는 f’(x)의 극점도 알아야 합니다.</p>

<p>한번 더, 미분을 한다면 다음과 같은 1차 방정식이 됩니다.</p>

<p><img src="https://user-images.githubusercontent.com/60007241/82661641-5c295a80-9c67-11ea-9c95-d2354fdfd770.png" alt="graph3" style="zoom:50%;" /></p>

<p>여기서도 f’‘(x) = 0이 되는 지점인 x = 2가 f’(x)의 극점이 됩니다.</p>

<p>그러므로 f`(x)의 극점을 구했기 때문에 이분법을 통해서 극점들을 구할 수 있게 됩니다.</p>

<h2 id="문제로-이해하기">문제로 이해하기</h2>

<hr />

<p>이분법을 이해하기위해 예제로 알고스팟의 ROOTS로 풀어보겠습니다.</p>

<blockquote>
  <h4 id="문제">문제</h4>

  <p>실수 근만을 갖는 ax2 + bx + c = 0과 같은 형태의 단변수 다항 방정식이 주어질 때, 이들의 근을 계산하는 프로그램을 작성하세요.</p>

  <p>다항식의 모든 해의 절대값은 10 이하라고 가정해도 좋습니다.</p>
</blockquote>

<p>문제는 비교적 간단합니다.</p>

<p>다항방정식이 주어진다면 우리는 x의 값을 이분법을 통해서 구하면 됩니다.</p>

<p>위에서 설명한 것을 그대로 코드로 옮기면 됩니다.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
</pre></td><td class="rouge-code"><pre><span class="cp">#include &lt;iostream&gt;
#include &lt;cmath&gt;
#include &lt;vector&gt;
#include &lt;algorithm&gt;
#define L 10
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="c1">// 함수를 표현</span>
<span class="k">typedef</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">double</span><span class="o">&gt;</span> <span class="n">poly</span><span class="p">;</span>

<span class="c1">// 극점들</span>
<span class="k">typedef</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">double</span><span class="o">&gt;</span> <span class="n">sols</span><span class="p">;</span>

<span class="c1">// 매개변수 함수를 미분한 새로운 함수를 반환합니다.</span>
<span class="n">poly</span> <span class="nf">diffrentiate</span><span class="p">(</span><span class="k">const</span> <span class="n">poly</span><span class="o">&amp;</span> <span class="n">values</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">poly</span> <span class="n">ret</span> <span class="o">=</span> <span class="n">values</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">values</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">--</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">ret</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">*=</span> <span class="n">i</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">values</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">ret</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">ret</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span>
    <span class="p">}</span>
    
    <span class="n">ret</span><span class="p">.</span><span class="n">pop_back</span><span class="p">();</span>

    <span class="k">return</span> <span class="n">ret</span><span class="p">;</span>
<span class="p">}</span>

<span class="c1">// f(x)의 값을 반환해줍니다.</span>
<span class="kt">double</span> <span class="nf">function</span><span class="p">(</span><span class="k">const</span> <span class="n">poly</span><span class="o">&amp;</span> <span class="n">values</span><span class="p">,</span> <span class="kt">double</span> <span class="n">x</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">double</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">values</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="c1">// y += 계수 * x^차수</span>
        <span class="n">y</span> <span class="o">+=</span> <span class="n">values</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">*</span><span class="n">pow</span><span class="p">(</span><span class="n">x</span> <span class="p">,</span><span class="n">i</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">y</span><span class="p">;</span>
<span class="p">}</span>

<span class="c1">// 최고 차항이 1차인 함수를 순수하게 계산합니다.</span>
<span class="n">sols</span> <span class="nf">solveNaive</span><span class="p">(</span><span class="k">const</span> <span class="n">poly</span><span class="o">&amp;</span> <span class="n">values</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">sols</span> <span class="n">ret</span><span class="p">;</span>

    <span class="k">if</span><span class="p">(</span><span class="n">values</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">ret</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="o">-</span><span class="n">values</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">/</span><span class="n">values</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="n">ret</span><span class="p">;</span>
<span class="p">}</span>

<span class="c1">// 주어진 f(x)를 이분법으로 f(x)=0에 해당하는 해를 구하여 오름차순으로 출력합니다.</span>
<span class="n">sols</span> <span class="nf">solve</span><span class="p">(</span><span class="k">const</span> <span class="n">poly</span><span class="o">&amp;</span> <span class="n">values</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// 최고 차수가 1일 때 순수하게 계산한다.</span>
    <span class="k">if</span><span class="p">(</span><span class="n">values</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">&lt;=</span> <span class="mi">2</span><span class="p">)</span> <span class="k">return</span> <span class="n">solveNaive</span><span class="p">(</span><span class="n">values</span><span class="p">);</span>
    <span class="n">poly</span> <span class="n">func</span> <span class="o">=</span> <span class="n">diffrentiate</span><span class="p">(</span><span class="n">values</span><span class="p">);</span>
    <span class="n">sols</span> <span class="n">sol</span> <span class="o">=</span> <span class="n">solve</span><span class="p">(</span><span class="n">func</span><span class="p">);</span>

    <span class="c1">// 가장 앞 쪽 극점과 가장 뒤 쪽 극점을 위한 L값 추가</span>
    <span class="n">sol</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">sol</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="o">-</span><span class="n">L</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
    <span class="n">sol</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">sol</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span> <span class="n">L</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>

    <span class="n">sols</span> <span class="n">ret</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span> <span class="o">&lt;</span> <span class="n">sol</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="kt">double</span> <span class="n">x1</span> <span class="o">=</span> <span class="n">sol</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="kt">double</span> <span class="n">x2</span> <span class="o">=</span> <span class="n">sol</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span>
        <span class="kt">double</span> <span class="n">y1</span> <span class="o">=</span> <span class="n">function</span><span class="p">(</span><span class="n">values</span><span class="p">,</span> <span class="n">x1</span><span class="p">);</span>
        <span class="kt">double</span> <span class="n">y2</span> <span class="o">=</span> <span class="n">function</span><span class="p">(</span><span class="n">values</span><span class="p">,</span> <span class="n">x2</span><span class="p">);</span>

        <span class="k">if</span><span class="p">(</span><span class="n">y1</span><span class="o">*</span><span class="n">y2</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="k">continue</span><span class="p">;</span>

        <span class="k">if</span><span class="p">(</span><span class="n">y1</span> <span class="o">&gt;</span> <span class="n">y2</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">swap</span><span class="p">(</span><span class="n">x1</span><span class="p">,</span> <span class="n">x2</span><span class="p">);</span>
            <span class="n">swap</span><span class="p">(</span><span class="n">y1</span><span class="p">,</span> <span class="n">y2</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="kt">int</span> <span class="n">iter</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span>
        <span class="k">while</span><span class="p">(</span><span class="n">iter</span><span class="o">--</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">double</span> <span class="n">mx</span> <span class="o">=</span> <span class="p">(</span><span class="n">x1</span> <span class="o">+</span> <span class="n">x2</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span>
            <span class="kt">double</span> <span class="n">my</span> <span class="o">=</span> <span class="n">function</span><span class="p">(</span><span class="n">values</span><span class="p">,</span> <span class="n">mx</span><span class="p">);</span>

            <span class="k">if</span><span class="p">(</span><span class="n">my</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">x2</span> <span class="o">=</span> <span class="n">mx</span><span class="p">;</span>
                <span class="n">y2</span> <span class="o">=</span> <span class="n">my</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span>
            <span class="p">{</span>
                <span class="n">x1</span> <span class="o">=</span> <span class="n">mx</span><span class="p">;</span>
                <span class="n">y1</span> <span class="o">=</span> <span class="n">my</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="n">ret</span><span class="p">.</span><span class="n">push_back</span><span class="p">((</span><span class="n">x1</span><span class="o">+</span><span class="n">x2</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">);</span>

    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">ret</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">C</span><span class="p">;</span>

    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">C</span><span class="p">;</span>

    <span class="k">while</span><span class="p">(</span><span class="n">C</span><span class="o">--</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="kt">int</span> <span class="n">n</span><span class="p">;</span>
        <span class="n">poly</span> <span class="n">values</span><span class="p">;</span>
        <span class="n">sols</span> <span class="n">answer</span><span class="p">;</span>
        
        <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">n</span><span class="p">;</span>

        <span class="n">values</span><span class="p">.</span><span class="n">assign</span><span class="p">(</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>

        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">n</span><span class="p">;</span> <span class="n">i</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">--</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">values</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="p">}</span>

        <span class="n">answer</span> <span class="o">=</span> <span class="n">solve</span><span class="p">(</span><span class="n">values</span><span class="p">);</span>

        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">fixed</span><span class="p">;</span>
        <span class="n">cout</span><span class="p">.</span><span class="n">precision</span><span class="p">(</span><span class="mi">9</span><span class="p">);</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">answer</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">answer</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="s">" "</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="sc">'\n'</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

:ET